name: Deploy to EC2

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build with Maven
        run: mvn clean package -Pprod -DskipTests

      - name: Verify JAR File
        run: |
          echo "Listing files in target directory..."
          ls -l target/


      - name: Check connectivity
        run: |
          echo "Checking network connectivity to ${HOST} on port 22..."
          nc -zv ${{ secrets.EC2_HOST }} 22

      - name: Deploy to EC2
        env:
          PRIVATE_KEY: ${{ secrets.EC2_PRIVATE_KEY }}
          HOST: ${{ secrets.EC2_HOST }}
          USER: ${{ secrets.EC2_USER }}
        run: |
          echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
          echo "Transferring JAR file to EC2..."
          scp -i private_key -o StrictHostKeyChecking=no -o ConnectTimeout=30 target/RegaloLibre-0.0.1-SNAPSHOT.jar ${USER}@${HOST}:~/RegaloLibre-0.0.1-SNAPSHOT.jar
          
          echo "Setting up deployment script..."
          ssh -i private_key -o StrictHostKeyChecking=no -o ConnectTimeout=30 ${USER}@${HOST} << 'EOT'
            cat << 'EOF' > deploy.sh

  #!/bin/bash
  set -x
echo "Current working directory: $(pwd)"
  
  PID=$(pgrep -f RegaloLibre-0.0.1-SNAPSHOT.jar)
  if [ -n "$PID" ]; then
echo "Stopping process with PID: $PID"
  kill $PID
  sleep 5
  if kill -0 $PID 2>/dev/null; then
  echo "Process did not stop gracefully, force killing..."
  kill -9 $PID
  fi
  else
  echo "No existing process found"
  fi
  
  echo "Starting new application..."
  cd ~
  nohup java -jar RegaloLibre-0.0.1-SNAPSHOT.jar --spring.profiles.active=prod > app.log 2>&1 &
  NEW_PID=$!
echo "Started process with PID: $NEW_PID"
  sleep 15
  if ps -p $NEW_PID > /dev/null; then
  echo "Application started successfully"
  tail -n 50 app.log
  else
  echo "Application failed to start"
  cat app.log
  exit 1
  fi
  EOF
  chmod +x deploy.sh
  echo "Deployment script created and made executable"
  EOT
  
  echo "Running deployment script..."
  ssh -i private_key -o StrictHostKeyChecking=no -o ConnectTimeout=30 ${USER}@${HOST} << 'EOT'
  ./deploy.sh
  EOT